name: CI

on:
  push:
    branches:
      - main
  pull_request:
  workflow_dispatch:

defaults:
  run:
    shell: bash

jobs:
  build:
    name: Build artifacts
    strategy:
      matrix:
        os:
          - windows-2019
          - macos-13
          - ubuntu-20.04
    runs-on: ${{ matrix.os }}
    steps:
      - name: Setup environment
        run: |
          echo TRIPLE_SUFFIX=${{ startsWith(matrix.os, 'windows') && 'pc-windows-msvc' || (startsWith(matrix.os, 'macos') && 'apple-darwin' || 'unknown-linux-gnu') }} >> $GITHUB_ENV
          echo OS_NAME=${{ startsWith(matrix.os, 'windows') && 'windows' || (startsWith(matrix.os, 'macos') && 'osx' || 'linux') }} >> $GITHUB_ENV
      - name: Checkout repo
        uses: actions/checkout@v4
      - name: Setup toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: x86_64-${{ env.TRIPLE_SUFFIX }},aarch64-${{ env.TRIPLE_SUFFIX }}
      - name: Setup cross-compilation toolchain
        run: |
          sudo apt install -y gcc-aarch64-linux-gnu
          echo -e '[target.aarch64-unknown-linux-gnu]\nlinker = "aarch64-linux-gnu-gcc"' >> ~/.cargo/config.toml
        if: ${{ env.OS_NAME == 'linux' }}
      - name: Build for x86_64
        run: cargo build --profile release
      - name: Build for aarch64
        run: cargo build --profile release --target aarch64-${{ env.TRIPLE_SUFFIX }}
      - name: Create universal binary
        run: |
          lipo -create -output rust-watcher target/release/rust-watcher target/aarch64-apple-darwin/release/rust-watcher
          mv rust-watcher target/release/rust-watcher
        if: ${{ env.OS_NAME == 'osx' }}
      - name: Upload binary
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.OS_NAME }}-${{ env.OS_NAME == 'osx' && 'universal2' || 'x64' }}
          path: target/release/rust-watcher${{ env.OS_NAME == 'windows' && '.exe' || '' }}
      - name: Upload aarch64 binary
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.OS_NAME }}-arm64
          path: target/aarch64-${{ env.TRIPLE_SUFFIX }}/release/rust-watcher
        if: ${{ env.OS_NAME == 'linux' }}
  push:
    name: Push artifacts
    needs: build
    if: ${{ (github.event_name == 'push' || github.event_name == 'workflow_dispatch') && needs.build.result == 'success' }}
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
      - name: Setup repo
        run: |
          git config user.name `git log --format=%an -1`
          git config user.email `git log --format=%ae -1`
          git checkout --orphan built
      - name: Download artifacts
        uses: actions/download-artifact@v4
      - name: Commit repo
        run: |
          find -name 'rust-watcher*' -exec chmod +x {} +
          git add --all
          git commit -m "Built artifacts for ${{ github.sha }}"
      - name: Fetch newest commit
        run: |
          git fetch origin
          echo NEWEST_COMMIT=`git rev-parse origin/main` >> $GITHUB_ENV
      - name: Push repo
        run: git push -f origin built
        if: ${{ env.NEWEST_COMMIT == github.sha }}
